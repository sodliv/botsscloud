# imports de blibliotecas e suas funcoes essenciais
# = do selenium pra automatizacao, do pandas pra importacao de dados da planilha, e do webdriver do chrome pro acesso a ele)
import time
import pandas as pd
import pyautogui
import keyboard as k
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import os
import warnings
warnings.filterwarnings("ignore", category=UserWarning, module="openpyxl")

###################################################################################################################################################

# config chrome (o abre maximizado)
chrome_options = Options()
chrome_options.add_argument("--start-maximized")  # Abre o navegador maximizado
# chrome_options.add_argument("--headless") = add esta linha se quiser que o processo seja hide

# inicia driver chrome
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)

# variavel pros dados de login
url_login = "https://www.sccloud.com.br/smartbundy/index.php/S4/dashboard/view"
usuario = "solon"
senha = "solon1010"

###################################################################################################################################################

# acessa o url do sistema sscloud
print("Acessando o sistema...")
driver.get(url_login)

WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, "input-9")))
print("Sistema acessado... Seguindo para Login...")

# bota usuario
print("Fazendo login...")
driver.find_element(By.ID, "input-9").send_keys(usuario)
print("Usuario colocado...")

# bColoca a senha
WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, "password")))
driver.find_element(By.ID, "input-12").send_keys(senha)
print("Senha tambÃ©m inserida...")

botao_entrar = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Entrar') or contains(., ' Entrar ') or @type='submit']"))
)
url_antes = driver.current_url
driver.execute_script("arguments[0].click();", botao_entrar)

print("Site acessado com sucesso...")

time.sleep(2)

# indo p ponto
print("Indo para Ã¡rea de Tratamento de Ponto...")
driver.get("https://www.sccloud.com.br/smartbundy/index.php/FolhaPonto/tratamentoForm/_OBJ/mod_tratar_marcacoes/_SC_USER/solon")

###################################################################################################################################################

# exporta os dados da planilha selecionada
print("Carregando dados da planilha...")
df = pd.read_excel(r'C:\\Users\\smlima\\Desktop\\Matriz entrevista de AbsenteÃ­smo222.xlsx')

# busca na planilha pelos titulos de coluna requeridos e por seu respectivo conteudo em loop
for index, row in df.iterrows():
    nome = row['Nome']

    data = row['Data']
    if pd.notnull(data):
        data_str = data.strftime('%d/%m/%Y')
    else:
        data_str = ''

    motivo = row['Motivo']

    print(f"\nSelecionando: {data}...")

    try:
        # (1: Preenchendo a data do atestado)
        campo_data1 = WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.ID, "data_inicial"))
        )
        campo_data1.clear()
        campo_data1.send_keys(data_str)

        campo_data2 = WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.ID, "data_final"))
        )
        campo_data2.clear()
        campo_data2.send_keys(data_str)

        print(f"âœ” Registro do dia '{data}' conforme prescrito no devido atestado selecionado! Prosseguindo...")

        # (2: Preenchendo o nome do colaborador)
        campo_filtro = WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.ID, '_colaborador_filtro'))
        )
        campo_filtro.clear()
        campo_filtro.send_keys(nome)
        print(f"âœ” Colaborador '{nome}' tambÃ©m selecionado com sucesso! Ainda prosseguindo...")
        time.sleep(10)

        # (3: Apertando botÃ£o para seleÃ§Ã£o de colaborador)
        botao_pesquisar = webdriver(driver, 5).until(
            EC.element_to_be_clickable((By.XPATH, "//input[@value='Pesquisar']"))
        )
        botao_pesquisar.click()

        if botao_pesquisar:
            print ("BotÃ£o pesquisar achado! ðŸ˜ƒ")
            continue
        if not botao_pesquisar:
            print ("BotÃ£o pesquisar nÃ£o achado. ðŸ˜¥")
            break

    except Exception as e:    
        print(f"âœ” Erro.")
